function varargout=sys_hopf(action,varargin)
%% Automatically generated with matlabFunction
%#ok<*DEFNU,*INUSD,*INUSL>

switch action
  case 'nargs'
   varargout{1}=2;
   return
  case 'nout'
   varargout{1}=2;
   return
  case 'argrange'
   varargout{1}=struct('x',1:2,'p',3:4);
   return
  case 'argsize'
   varargout{1}=struct('x',2,'p',2);
   return
  case 'vector'
   varargout{1}=struct('x',1,'p',1);
   return
  case 'extension'
   varargout{1}='rhs';
   return
  case 'maxorder'
   varargout{1}=2;
   return
end
nout=2;
order=varargin{1};
f=str2func(sprintf('sys_hopf_%s_%d',action,order));
varargout=cell(nout,1);
[varargout{:}]=f(varargin{2:end});




function [out1,out2] = sys_hopf_rhs_0(x1,x2,p1,p2,x1_dev,x2_dev,p1_dev,p2_dev)
%SYS_HOPF_RHS_0
%    [OUT1,OUT2] = SYS_HOPF_RHS_0(X1,X2,P1,P2,X1_DEV,X2_DEV,P1_DEV,P2_DEV)

%    This function was generated by the Symbolic Math Toolbox version 8.6.
%    15-Jun-2023 02:51:02

t2 = x1.^2;
t3 = x2.^2;
t4 = t2+t3;
t5 = t4.^2;
t6 = p2.*t4;
t7 = -t5;
t8 = p1+t6+t7;
out1 = -x2+t8.*x1;
if nargout > 1
    out2 = x1+t8.*x2;
end


function [out1,out2] = sys_hopf_rhs_1(x1,x2,p1,p2,x1_dev,x2_dev,p1_dev,p2_dev)
%SYS_HOPF_RHS_1
%    [OUT1,OUT2] = SYS_HOPF_RHS_1(X1,X2,P1,P2,X1_DEV,X2_DEV,P1_DEV,P2_DEV)

%    This function was generated by the Symbolic Math Toolbox version 8.6.
%    15-Jun-2023 02:51:02

t2 = x1.^2;
t3 = x2.^2;
t4 = x1.*x1_dev.*2.0;
t5 = x2.*x2_dev.*2.0;
t6 = t2+t3;
t10 = t4+t5;
t7 = t6.^2;
t8 = p2.*t6;
t9 = p2_dev.*t6;
t11 = p2.*t10;
t13 = t6.*t10.*2.0;
t12 = -t7;
t14 = -t13;
t15 = p1+t8+t12;
t16 = p1_dev+t9+t11+t14;
out1 = -x2_dev+t16.*x1+t15.*x1_dev;
if nargout > 1
    out2 = x1_dev+t16.*x2+t15.*x2_dev;
end


function [out1,out2] = sys_hopf_rhs_2(x1,x2,p1,p2,x1_dev,x2_dev,p1_dev,p2_dev)
%SYS_HOPF_RHS_2
%    [OUT1,OUT2] = SYS_HOPF_RHS_2(X1,X2,P1,P2,X1_DEV,X2_DEV,P1_DEV,P2_DEV)

%    This function was generated by the Symbolic Math Toolbox version 8.6.
%    15-Jun-2023 02:51:02

t2 = x1.^2;
t3 = x2.^2;
t4 = x1_dev.^2;
t5 = x2_dev.^2;
t6 = x1.*x1_dev.*2.0;
t7 = x2.*x2_dev.*2.0;
t8 = t4.*2.0;
t9 = t5.*2.0;
t10 = t2+t3;
t12 = t6+t7;
t11 = p2_dev.*t10;
t13 = t12.^2;
t14 = t8+t9;
t15 = p2.*t12;
t16 = p2_dev.*t12.*2.0;
t21 = t10.*t12.*2.0;
t17 = p2.*t14;
t18 = t13.*2.0;
t19 = -t16;
t22 = -t21;
t23 = t10.*t14.*2.0;
t20 = -t17;
t24 = p1_dev+t11+t15+t22;
out1 = t24.*x1_dev.*2.0+x1.*(t16+t17-t18-t23);
if nargout > 1
    out2 = t24.*x2_dev.*2.0+x2.*(t16+t17-t18-t23);
end

